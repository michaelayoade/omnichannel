# Generated by Django 4.2.7 on 2025-06-26 13:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("customers", "0001_initial"),
        ("conversations", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="FacebookConversationFlow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "flow_type",
                    models.CharField(
                        choices=[
                            ("welcome", "Welcome Flow"),
                            ("lead_generation", "Lead Generation"),
                            ("customer_service", "Customer Service"),
                            ("onboarding", "User Onboarding"),
                            ("survey", "Survey/Feedback"),
                            ("booking", "Booking/Appointment"),
                            ("faq", "FAQ/Help"),
                            ("custom", "Custom Flow"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "trigger_type",
                    models.CharField(
                        choices=[
                            ("get_started", "Get Started Button"),
                            ("keyword", "Keyword Match"),
                            ("postback", "Postback Payload"),
                            ("quick_reply", "Quick Reply"),
                            ("referral", "Referral"),
                            ("manual", "Manual Trigger"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "trigger_value",
                    models.CharField(
                        blank=True, help_text="Keyword, payload, etc.", max_length=1000
                    ),
                ),
                ("flow_steps", models.JSONField(help_text="Flow steps and logic")),
                ("variables", models.JSONField(blank=True, default=dict)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "priority",
                    models.PositiveIntegerField(
                        default=0, help_text="Higher number = higher priority"
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("completion_count", models.PositiveIntegerField(default=0)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FacebookMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.CharField(max_length=100, unique=True)),
                ("facebook_message_id", models.CharField(blank=True, max_length=100)),
                (
                    "message_type",
                    models.CharField(
                        choices=[
                            ("text", "Text"),
                            ("image", "Image"),
                            ("video", "Video"),
                            ("audio", "Audio"),
                            ("file", "File"),
                            ("sticker", "Sticker"),
                            ("location", "Location"),
                            ("quick_reply", "Quick Reply"),
                            ("postback", "Postback"),
                            ("template", "Template"),
                            ("fallback", "Fallback"),
                        ],
                        default="text",
                        max_length=20,
                    ),
                ),
                (
                    "direction",
                    models.CharField(
                        choices=[("inbound", "Inbound"), ("outbound", "Outbound")],
                        max_length=10,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("read", "Read"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("text", models.TextField(blank=True)),
                (
                    "payload",
                    models.JSONField(
                        blank=True, default=dict, help_text="Raw message payload"
                    ),
                ),
                ("quick_reply_payload", models.CharField(blank=True, max_length=1000)),
                ("attachment_url", models.URLField(blank=True)),
                ("attachment_type", models.CharField(blank=True, max_length=50)),
                ("attachment_payload", models.JSONField(blank=True, default=dict)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("error_code", models.CharField(blank=True, max_length=20)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FacebookPage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "page_id",
                    models.CharField(
                        help_text="Facebook Page ID", max_length=100, unique=True
                    ),
                ),
                (
                    "page_name",
                    models.CharField(help_text="Page display name", max_length=255),
                ),
                (
                    "page_username",
                    models.CharField(
                        blank=True, help_text="Page username (@page)", max_length=100
                    ),
                ),
                ("page_category", models.CharField(blank=True, max_length=100)),
                ("page_description", models.TextField(blank=True)),
                (
                    "page_access_token",
                    models.TextField(help_text="Long-lived page access token"),
                ),
                (
                    "app_id",
                    models.CharField(help_text="Facebook App ID", max_length=100),
                ),
                (
                    "app_secret",
                    models.CharField(help_text="Facebook App Secret", max_length=255),
                ),
                (
                    "webhook_url",
                    models.URLField(blank=True, help_text="Webhook endpoint URL"),
                ),
                (
                    "verify_token",
                    models.CharField(
                        help_text="Webhook verification token", max_length=255
                    ),
                ),
                ("webhook_subscribed", models.BooleanField(default=False)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("pending", "Pending Setup"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("is_healthy", models.BooleanField(default=False)),
                ("last_health_check", models.DateTimeField(blank=True, null=True)),
                ("last_error_message", models.TextField(blank=True)),
                ("auto_reply_enabled", models.BooleanField(default=True)),
                ("welcome_message_enabled", models.BooleanField(default=True)),
                ("get_started_enabled", models.BooleanField(default=True)),
                ("persistent_menu_enabled", models.BooleanField(default=True)),
                ("total_messages_sent", models.PositiveIntegerField(default=0)),
                ("total_messages_received", models.PositiveIntegerField(default=0)),
                ("total_conversations", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FacebookUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "psid",
                    models.CharField(
                        help_text="Page-scoped ID", max_length=100, unique=True
                    ),
                ),
                ("first_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(blank=True, max_length=100)),
                ("profile_pic", models.URLField(blank=True)),
                ("locale", models.CharField(blank=True, max_length=10)),
                ("timezone", models.IntegerField(blank=True, null=True)),
                ("gender", models.CharField(blank=True, max_length=20)),
                ("user_status", models.CharField(default="active", max_length=50)),
                ("last_interaction_at", models.DateTimeField(blank=True, null=True)),
                ("is_subscribed", models.BooleanField(default=True)),
                ("total_messages_sent", models.PositiveIntegerField(default=0)),
                ("total_messages_received", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="facebook_profiles",
                        to="customers.customer",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="facebook_integration.facebookpage",
                    ),
                ),
            ],
            options={
                "ordering": ["-last_interaction_at"],
            },
        ),
        migrations.CreateModel(
            name="FacebookWebhookEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("message", "Message"),
                            ("messaging_postbacks", "Postback"),
                            ("messaging_optins", "Opt-in"),
                            ("messaging_referrals", "Referral"),
                            ("messaging_handovers", "Handover"),
                            ("messaging_policy_enforcement", "Policy Enforcement"),
                            ("messaging_account_linking", "Account Linking"),
                            ("messaging_checkout_updates", "Checkout Updates"),
                            ("messaging_pre_checkouts", "Pre-checkout"),
                            ("messaging_payments", "Payments"),
                            ("message_deliveries", "Delivery"),
                            ("message_reads", "Read Receipt"),
                            ("messaging_game_plays", "Game Play"),
                            ("standby", "Standby"),
                            ("unknown", "Unknown"),
                        ],
                        max_length=50,
                    ),
                ),
                ("raw_data", models.JSONField(help_text="Raw webhook event data")),
                ("processed_data", models.JSONField(blank=True, default=dict)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                            ("ignored", "Ignored"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "facebook_message",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webhook_events",
                        to="facebook_integration.facebookmessage",
                    ),
                ),
                (
                    "facebook_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webhook_events",
                        to="facebook_integration.facebookuser",
                    ),
                ),
                (
                    "page",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhook_events",
                        to="facebook_integration.facebookpage",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FacebookUserState",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("current_step", models.CharField(blank=True, max_length=100)),
                ("state_data", models.JSONField(blank=True, default=dict)),
                ("context_variables", models.JSONField(blank=True, default=dict)),
                ("last_message_at", models.DateTimeField(blank=True, null=True)),
                ("in_handover", models.BooleanField(default=False)),
                ("handover_app_id", models.CharField(blank=True, max_length=100)),
                ("handover_metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_flow",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="active_users",
                        to="facebook_integration.facebookconversationflow",
                    ),
                ),
                (
                    "facebook_user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversation_state",
                        to="facebook_integration.facebookuser",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FacebookTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, unique=True)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("button", "Button Template"),
                            ("generic", "Generic Template"),
                            ("list", "List Template"),
                            ("receipt", "Receipt Template"),
                            ("airline_boardingpass", "Airline Boarding Pass"),
                            ("airline_checkin", "Airline Check-in"),
                            ("airline_itinerary", "Airline Itinerary"),
                            ("airline_update", "Airline Update"),
                        ],
                        max_length=30,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "template_data",
                    models.JSONField(help_text="Template structure and content"),
                ),
                (
                    "variables",
                    models.JSONField(
                        blank=True, default=list, help_text="Available variables"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Available to all pages"
                    ),
                ),
                ("usage_count", models.PositiveIntegerField(default=0)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "page",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="templates",
                        to="facebook_integration.facebookpage",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="FacebookPageConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("welcome_message", models.TextField(blank=True)),
                (
                    "get_started_payload",
                    models.CharField(default="GET_STARTED", max_length=1000),
                ),
                ("persistent_menu", models.JSONField(blank=True, default=list)),
                ("greeting_text", models.TextField(blank=True, max_length=160)),
                ("ice_breakers", models.JSONField(blank=True, default=list)),
                ("whitelisted_domains", models.JSONField(blank=True, default=list)),
                ("account_linking_url", models.URLField(blank=True)),
                ("is_configured", models.BooleanField(default=False)),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "page",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="configuration",
                        to="facebook_integration.facebookpage",
                    ),
                ),
            ],
        ),
        migrations.AddIndex(
            model_name="facebookpage",
            index=models.Index(
                fields=["page_id"], name="facebook_in_page_id_0be816_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="facebookpage",
            index=models.Index(
                fields=["status", "is_healthy"], name="facebook_in_status_b89916_idx"
            ),
        ),
        migrations.AddField(
            model_name="facebookmessage",
            name="conversation",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="facebook_messages",
                to="conversations.conversation",
            ),
        ),
        migrations.AddField(
            model_name="facebookmessage",
            name="facebook_user",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="facebook_integration.facebookuser",
            ),
        ),
        migrations.AddField(
            model_name="facebookmessage",
            name="page",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="messages",
                to="facebook_integration.facebookpage",
            ),
        ),
        migrations.AddField(
            model_name="facebookconversationflow",
            name="page",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="conversation_flows",
                to="facebook_integration.facebookpage",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookwebhookevent",
            index=models.Index(
                fields=["page", "event_type", "-created_at"],
                name="facebook_in_page_id_d2f7cc_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookwebhookevent",
            index=models.Index(
                fields=["status", "-created_at"], name="facebook_in_status_980373_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="facebookuserstate",
            index=models.Index(
                fields=["current_flow", "-updated_at"],
                name="facebook_in_current_5fc7fe_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookuserstate",
            index=models.Index(
                fields=["in_handover"], name="facebook_in_in_hand_289264_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="facebookuser",
            index=models.Index(
                fields=["psid", "page"], name="facebook_in_psid_0c703d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="facebookuser",
            index=models.Index(
                fields=["page", "-last_interaction_at"],
                name="facebook_in_page_id_84a866_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="facebookuser",
            unique_together={("psid", "page")},
        ),
        migrations.AddIndex(
            model_name="facebooktemplate",
            index=models.Index(
                fields=["template_type", "is_active"],
                name="facebook_in_templat_c8b7af_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebooktemplate",
            index=models.Index(
                fields=["page", "is_active"], name="facebook_in_page_id_09cb65_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="facebookmessage",
            index=models.Index(
                fields=["page", "facebook_user", "-created_at"],
                name="facebook_in_page_id_add332_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookmessage",
            index=models.Index(
                fields=["conversation", "-created_at"],
                name="facebook_in_convers_a5b7f7_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookmessage",
            index=models.Index(
                fields=["direction", "status"], name="facebook_in_directi_3600dc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="facebookmessage",
            index=models.Index(
                fields=["message_type", "-created_at"],
                name="facebook_in_message_c23b97_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookconversationflow",
            index=models.Index(
                fields=["page", "trigger_type", "is_active"],
                name="facebook_in_page_id_26d52d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="facebookconversationflow",
            index=models.Index(
                fields=["flow_type", "is_active"], name="facebook_in_flow_ty_b41fa7_idx"
            ),
        ),
    ]
