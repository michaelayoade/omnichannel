[tool.bandit]
# Security checks configuration
skips = ["B101"]  # Allow asserts in test files
exclude_dirs = [
    "tests",
    "*/tests/*",
    "migrations",
    ".venv",
    "__pycache__",
]
# Severity levels: HIGH, MEDIUM, LOW
# Confidence levels: HIGH, MEDIUM, LOW
severity_level = "HIGH"
confidence_level = "MEDIUM"

[tool.ruff]
line-length = 88
target-version = "py310"
extend-exclude = [
    "migrations",
    "__pycache__",
]

[tool.ruff.lint]
# Comprehensive linting ruleset
select = [
    "E",     # pycodestyle errors
    "F",     # pyflakes
    "I",     # isort
    "W",     # pycodestyle warnings
    "C90",   # mccabe complexity
    "N",     # pep8-naming
    "D",     # pydocstyle
    "UP",    # pyupgrade
    "B",     # flake8-bugbear
    "A",     # flake8-builtins
    "COM",   # flake8-commas
    "C4",    # flake8-comprehensions
    "T20",   # flake8-print
    "PT",    # flake8-pytest-style 
    "RET",   # flake8-return
    "SIM",   # flake8-simplify
    "ARG",   # flake8-unused-arguments
    "ERA",   # eradicate
    "PL",    # pylint
    "RUF",   # ruff-specific rules
]

ignore = [
    "D100",   # Missing docstring in public module
    "D104",   # Missing docstring in public package
    "D106",   # Missing docstring in public nested class
    "D203",   # 1 blank line required before class docstring
    "D213",   # Multi-line docstring summary should start at the second line
]

# Ignore certain rules in specific files
[tool.ruff.lint.per-file-ignores]
"omnichannel_core/settings/dev.py" = ["F403", "F405"]
"omnichannel_core/settings/prod.py" = ["F403", "F405"]
"omnichannel_core/settings/test.py" = ["F403", "F405"]
"omnichannel_core/asgi.py" = ["E402"] 
"omnichannel_core/settings/base.py" = ["E402"]
"*/tests/*" = ["D103", "S101"]  # Allow missing docstrings and asserts in tests
"conftest.py" = ["D103"]  # Allow missing docstrings in conftest

[tool.ruff.mccabe]
max-complexity = 10
