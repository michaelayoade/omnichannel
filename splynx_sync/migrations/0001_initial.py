# Generated by Django 4.2.7 on 2025-06-26 11:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("customers", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="SplynxCustomerMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("splynx_customer_id", models.CharField(max_length=100, unique=True)),
                ("splynx_login", models.CharField(blank=True, max_length=100)),
                ("splynx_data", models.JSONField(blank=True, default=dict)),
                ("last_sync_at", models.DateTimeField(auto_now=True)),
                ("sync_status", models.CharField(default="synced", max_length=20)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="splynx_mapping",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "db_table": "splynx_customer_mappings",
            },
        ),
        migrations.CreateModel(
            name="SplynxSyncLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sync_type",
                    models.CharField(
                        choices=[
                            ("customers", "Customers"),
                            ("services", "Services"),
                            ("invoices", "Invoices"),
                            ("tickets", "Tickets"),
                            ("payments", "Payments"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("partial", "Partial"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(auto_now_add=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("records_processed", models.IntegerField(default=0)),
                ("records_created", models.IntegerField(default=0)),
                ("records_updated", models.IntegerField(default=0)),
                ("records_failed", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("sync_details", models.JSONField(blank=True, default=dict)),
            ],
            options={
                "db_table": "splynx_sync_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="SplynxWebhookEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.CharField(max_length=100, unique=True)),
                (
                    "event_type",
                    models.CharField(
                        choices=[
                            ("customer.created", "Customer Created"),
                            ("customer.updated", "Customer Updated"),
                            ("customer.deleted", "Customer Deleted"),
                            ("service.created", "Service Created"),
                            ("service.updated", "Service Updated"),
                            ("service.deleted", "Service Deleted"),
                            ("ticket.created", "Ticket Created"),
                            ("ticket.updated", "Ticket Updated"),
                            ("invoice.created", "Invoice Created"),
                            ("invoice.updated", "Invoice Updated"),
                            ("payment.created", "Payment Created"),
                        ],
                        max_length=50,
                    ),
                ),
                ("splynx_object_id", models.CharField(max_length=100)),
                ("payload", models.JSONField(default=dict)),
                (
                    "processing_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("processed", "Processed"),
                            ("failed", "Failed"),
                            ("ignored", "Ignored"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "splynx_webhook_events",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["processing_status", "created_at"],
                        name="splynx_webh_process_ec2f37_idx",
                    ),
                    models.Index(
                        fields=["event_type", "splynx_object_id"],
                        name="splynx_webh_event_t_538cf2_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SplynxTicketMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("splynx_ticket_id", models.CharField(max_length=100, unique=True)),
                ("title", models.CharField(max_length=500)),
                ("description", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "New"),
                            ("work_in_progress", "Work in Progress"),
                            ("waiting_on_customer", "Waiting on Customer"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=100)),
                ("assigned_to", models.CharField(blank=True, max_length=100)),
                ("splynx_data", models.JSONField(blank=True, default=dict)),
                ("last_sync_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "customer_mapping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tickets",
                        to="splynx_sync.splynxcustomermapping",
                    ),
                ),
            ],
            options={
                "db_table": "splynx_ticket_mappings",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="SplynxServiceMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("splynx_service_id", models.CharField(max_length=100, unique=True)),
                ("service_name", models.CharField(max_length=200)),
                ("service_type", models.CharField(max_length=100)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("stopped", "Stopped"),
                            ("blocked", "Blocked"),
                            ("disabled", "Disabled"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("splynx_data", models.JSONField(blank=True, default=dict)),
                ("last_sync_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer_mapping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="services",
                        to="splynx_sync.splynxcustomermapping",
                    ),
                ),
            ],
            options={
                "db_table": "splynx_service_mappings",
            },
        ),
        migrations.CreateModel(
            name="SplynxInvoiceMapping",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("splynx_invoice_id", models.CharField(max_length=100, unique=True)),
                ("invoice_number", models.CharField(max_length=100)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "paid_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("unpaid", "Unpaid"),
                            ("paid", "Paid"),
                            ("partial", "Partial"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        max_length=20,
                    ),
                ),
                ("due_date", models.DateField(blank=True, null=True)),
                ("issue_date", models.DateField(blank=True, null=True)),
                ("splynx_data", models.JSONField(blank=True, default=dict)),
                ("last_sync_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "customer_mapping",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to="splynx_sync.splynxcustomermapping",
                    ),
                ),
            ],
            options={
                "db_table": "splynx_invoice_mappings",
                "ordering": ["-created_at"],
            },
        ),
    ]
