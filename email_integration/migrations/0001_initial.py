# Generated by Django 4.2.7 on 2025-06-26 12:35

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("customers", "0001_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EmailAccount",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("email_address", models.EmailField(max_length=254, unique=True)),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("individual", "Individual Account"),
                            ("shared", "Shared Mailbox"),
                            ("department", "Department Account"),
                        ],
                        default="individual",
                        max_length=20,
                    ),
                ),
                ("department", models.CharField(blank=True, max_length=100)),
                ("smtp_server", models.CharField(max_length=200)),
                ("smtp_port", models.IntegerField(default=587)),
                ("smtp_use_tls", models.BooleanField(default=True)),
                ("smtp_use_ssl", models.BooleanField(default=False)),
                ("smtp_username", models.CharField(max_length=200)),
                ("smtp_password", models.CharField(max_length=500)),
                (
                    "incoming_protocol",
                    models.CharField(
                        choices=[("imap", "IMAP"), ("pop3", "POP3")],
                        default="imap",
                        max_length=10,
                    ),
                ),
                ("incoming_server", models.CharField(max_length=200)),
                ("incoming_port", models.IntegerField(default=993)),
                ("incoming_use_ssl", models.BooleanField(default=True)),
                ("incoming_username", models.CharField(max_length=200)),
                ("incoming_password", models.CharField(max_length=500)),
                (
                    "poll_frequency",
                    models.IntegerField(
                        default=300, help_text="Polling frequency in seconds"
                    ),
                ),
                ("max_emails_per_poll", models.IntegerField(default=50)),
                ("auto_polling_enabled", models.BooleanField(default=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("error", "Error"),
                            ("maintenance", "Maintenance"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("last_poll_at", models.DateTimeField(blank=True, null=True)),
                (
                    "last_successful_poll_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("last_error_message", models.TextField(blank=True)),
                ("total_emails_received", models.IntegerField(default=0)),
                ("total_emails_sent", models.IntegerField(default=0)),
                ("display_name", models.CharField(blank=True, max_length=200)),
                ("signature", models.TextField(blank=True)),
                ("footer", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "email_accounts",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EmailThread",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("thread_id", models.CharField(max_length=255, unique=True)),
                ("subject", models.CharField(max_length=500)),
                ("participants", models.JSONField(default=list)),
                ("message_count", models.IntegerField(default=0)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("open", "Open"),
                            ("closed", "Closed"),
                            ("archived", "Archived"),
                        ],
                        default="open",
                        max_length=20,
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("first_message_at", models.DateTimeField()),
                ("last_message_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="threads",
                        to="email_integration.emailaccount",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "email_threads",
                "ordering": ["-last_message_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "rule_type",
                    models.CharField(
                        choices=[
                            ("auto_reply", "Auto Reply"),
                            ("forward", "Forward"),
                            ("filter", "Filter"),
                            ("assignment", "Assignment"),
                            ("priority", "Priority"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("priority", models.IntegerField(default=1)),
                (
                    "condition_type",
                    models.CharField(
                        choices=[
                            ("from_contains", "From Contains"),
                            ("subject_contains", "Subject Contains"),
                            ("body_contains", "Body Contains"),
                            ("from_equals", "From Equals"),
                            ("subject_equals", "Subject Equals"),
                            ("has_attachment", "Has Attachment"),
                            ("domain_equals", "Domain Equals"),
                        ],
                        max_length=30,
                    ),
                ),
                ("condition_value", models.CharField(max_length=500)),
                ("action_data", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rules",
                        to="email_integration.emailaccount",
                    ),
                ),
            ],
            options={
                "db_table": "email_rules",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="EmailPollLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("error", "Error"),
                            ("partial", "Partial"),
                            ("no_messages", "No Messages"),
                        ],
                        max_length=20,
                    ),
                ),
                ("messages_found", models.IntegerField(default=0)),
                ("messages_processed", models.IntegerField(default=0)),
                ("messages_failed", models.IntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("poll_duration", models.FloatField(blank=True, null=True)),
                ("started_at", models.DateTimeField()),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="poll_logs",
                        to="email_integration.emailaccount",
                    ),
                ),
            ],
            options={
                "db_table": "email_poll_logs",
                "ordering": ["-started_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message_id", models.CharField(max_length=255, unique=True)),
                ("external_message_id", models.CharField(blank=True, max_length=255)),
                ("thread_id", models.CharField(blank=True, max_length=255)),
                (
                    "direction",
                    models.CharField(
                        choices=[("inbound", "Inbound"), ("outbound", "Outbound")],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("bounced", "Bounced"),
                            ("received", "Received"),
                            ("read", "Read"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                ("from_email", models.EmailField(max_length=254)),
                ("from_name", models.CharField(blank=True, max_length=200)),
                ("to_emails", models.JSONField(default=list)),
                ("cc_emails", models.JSONField(blank=True, default=list)),
                ("bcc_emails", models.JSONField(blank=True, default=list)),
                ("reply_to_email", models.EmailField(blank=True, max_length=254)),
                ("subject", models.CharField(max_length=500)),
                ("plain_body", models.TextField(blank=True)),
                ("html_body", models.TextField(blank=True)),
                ("in_reply_to", models.CharField(blank=True, max_length=255)),
                ("references", models.TextField(blank=True)),
                ("thread_topic", models.CharField(blank=True, max_length=500)),
                ("raw_headers", models.JSONField(blank=True, default=dict)),
                ("raw_message", models.TextField(blank=True)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("bounced_at", models.DateTimeField(blank=True, null=True)),
                ("failed_at", models.DateTimeField(blank=True, null=True)),
                ("error_code", models.CharField(blank=True, max_length=50)),
                ("error_message", models.TextField(blank=True)),
                ("retry_count", models.IntegerField(default=0)),
                ("received_at", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to="email_integration.emailaccount",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "email_messages",
                "ordering": ["-received_at"],
            },
        ),
        migrations.CreateModel(
            name="EmailContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_address", models.EmailField(max_length=254)),
                ("display_name", models.CharField(blank=True, max_length=200)),
                ("first_name", models.CharField(blank=True, max_length=100)),
                ("last_name", models.CharField(blank=True, max_length=100)),
                ("organization", models.CharField(blank=True, max_length=200)),
                ("total_emails_received", models.IntegerField(default=0)),
                ("total_emails_sent", models.IntegerField(default=0)),
                ("last_email_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="email_integration.emailaccount",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="email_contacts",
                        to="customers.customer",
                    ),
                ),
            ],
            options={
                "db_table": "email_contacts",
            },
        ),
        migrations.CreateModel(
            name="EmailBounce",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "bounce_type",
                    models.CharField(
                        choices=[
                            ("hard", "Hard Bounce"),
                            ("soft", "Soft Bounce"),
                            ("complaint", "Complaint"),
                            ("delivery_delay", "Delivery Delay"),
                        ],
                        max_length=20,
                    ),
                ),
                ("bounced_email", models.EmailField(max_length=254)),
                ("bounce_reason", models.TextField()),
                ("diagnostic_code", models.CharField(blank=True, max_length=200)),
                ("action", models.CharField(blank=True, max_length=100)),
                ("status", models.CharField(blank=True, max_length=100)),
                ("bounce_timestamp", models.DateTimeField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bounce",
                        to="email_integration.emailmessage",
                    ),
                ),
            ],
            options={
                "db_table": "email_bounces",
            },
        ),
        migrations.CreateModel(
            name="EmailAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("filename", models.CharField(max_length=255)),
                ("content_type", models.CharField(max_length=100)),
                ("content_id", models.CharField(blank=True, max_length=255)),
                ("size", models.BigIntegerField()),
                ("file_path", models.FileField(upload_to="email/attachments/")),
                ("is_inline", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "message",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attachments",
                        to="email_integration.emailmessage",
                    ),
                ),
            ],
            options={
                "db_table": "email_attachments",
            },
        ),
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                (
                    "template_type",
                    models.CharField(
                        choices=[
                            ("reply", "Reply Template"),
                            ("auto_reply", "Auto Reply"),
                            ("notification", "Notification"),
                            ("marketing", "Marketing"),
                            ("system", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                ("subject", models.CharField(max_length=500)),
                ("plain_content", models.TextField(blank=True)),
                ("html_content", models.TextField(blank=True)),
                (
                    "variables",
                    models.JSONField(
                        blank=True, default=list, help_text="List of template variables"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "is_global",
                    models.BooleanField(
                        default=False, help_text="Available to all accounts"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="templates",
                        to="email_integration.emailaccount",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "email_templates",
                "unique_together": {("name", "account")},
            },
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["account", "-received_at"],
                name="email_messa_account_741c46_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["thread_id", "-received_at"],
                name="email_messa_thread__d34878_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["direction", "status"], name="email_messa_directi_0be202_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="emailmessage",
            index=models.Index(
                fields=["from_email", "-received_at"],
                name="email_messa_from_em_74f75d_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="emailcontact",
            unique_together={("account", "email_address")},
        ),
    ]
