# Generated by Django 4.2.7 on 2025-06-26 11:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="CommunicationChannel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "channel_type",
                    models.CharField(
                        choices=[
                            ("email", "Email"),
                            ("sms", "SMS"),
                            ("whatsapp", "WhatsApp"),
                            ("facebook", "Facebook Messenger"),
                            ("telegram", "Telegram"),
                            ("web_chat", "Web Chat"),
                            ("phone", "Phone"),
                            ("social_media", "Social Media"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("maintenance", "Maintenance"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("configuration", models.JSONField(blank=True, default=dict)),
                ("webhook_url", models.URLField(blank=True)),
                ("api_credentials", models.JSONField(blank=True, default=dict)),
                ("is_inbound", models.BooleanField(default=True)),
                ("is_outbound", models.BooleanField(default=True)),
                ("priority", models.IntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "communication_channels",
                "ordering": ["priority", "name"],
            },
        ),
        migrations.CreateModel(
            name="ChannelIntegration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("integration_type", models.CharField(max_length=100)),
                ("external_id", models.CharField(blank=True, max_length=200)),
                ("access_token", models.TextField(blank=True)),
                ("refresh_token", models.TextField(blank=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("connected", "Connected"),
                            ("disconnected", "Disconnected"),
                            ("error", "Error"),
                            ("pending", "Pending"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("last_sync_at", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("metadata", models.JSONField(blank=True, default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "channel",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="integration",
                        to="communication_channels.communicationchannel",
                    ),
                ),
            ],
            options={
                "db_table": "channel_integrations",
            },
        ),
        migrations.CreateModel(
            name="ChannelContact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("external_contact_id", models.CharField(max_length=200)),
                ("contact_identifier", models.CharField(max_length=200)),
                ("display_name", models.CharField(blank=True, max_length=200)),
                ("profile_data", models.JSONField(blank=True, default=dict)),
                ("is_verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "channel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="communication_channels.communicationchannel",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "db_table": "channel_contacts",
                "unique_together": {("channel", "external_contact_id")},
            },
        ),
    ]
